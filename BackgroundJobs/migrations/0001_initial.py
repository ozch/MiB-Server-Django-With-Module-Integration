# Generated by Django 2.1.7 on 2019-03-31 14:02

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NetworkPortScanner',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('ip', models.CharField(max_length=40)),
                ('ip_status', models.CharField(max_length=10, null=True)),
                ('port_type', models.CharField(blank=True, max_length=10, null=True)),
                ('port_no', models.IntegerField()),
                ('conf', models.CharField(blank=True, max_length=100, null=True)),
                ('cpe', models.CharField(blank=True, max_length=100, null=True)),
                ('extrainfo', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.CharField(blank=True, max_length=100, null=True)),
                ('reason', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('version', models.CharField(blank=True, max_length=100, null=True)),
                ('ts', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'network_open_port',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NetworkSnifferScanner',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('ip', models.CharField(max_length=40, null=True)),
                ('is_sniffer', models.IntegerField()),
                ('predict', models.CharField(max_length=50, null=True)),
                ('remarks', models.CharField(max_length=200, null=True)),
                ('ts', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'network_sniffers',
                'managed': True,
            },
        ),
    ]
